---
import SmailFaceIcon from "./icons/SmailFaceIcon.astro";
import RecordIcon from "./icons/RecordIcon.astro";
import ClipboardIcon from "./icons/ClipboardIcon.astro";
---

<div class="[grid-area:tg-main] w-full h-full bg-[#0f0f0f] px-120 flex flex-col justify-between py-3" style="background-image: url('../src/assets/bg-tg.png'); background-repeat: repeat; background-size: contain;">
  <section 
    id="chat-container" 
    class="flex flex-col gap-2 overflow-y-auto max-h-[calc(100vh-150px)] px-4"
  >
  </section>

  <section class="flex flex-row items-center gap-2 w-full transition duration-200">
    <span class="flex flex-row items-center gap-2 w-full rounded-lg px-8 py-1 bg-[#212121]">
      <SmailFaceIcon class="text-zinc-400 cursor-pointer hover:text-[#8774e1]" />
      <input 
        id="chat-input"
        type="text" 
        class="w-full bg-transparent text-zinc-400 h-12 text-xl outline-none" 
        placeholder="Message" />
      <ClipboardIcon class="text-zinc-400 cursor-pointer hover:text-[#8774e1]" />
    </span>

    <span class="flex flex-row items-center gap-2 rounded-full bg-[#212121] text-zinc-400 
    cursor-pointer p-4 hover:bg-[#8774e1] transition duration-200 hover:text-zinc-50">
      <RecordIcon class="text-inherit" />
    </span>
  </section>
</div>

<style>
  div {
    background-image: url("../../assets/bg-tg.png");
    background-repeat: repeat;
    background-size: contain;
  }

  #chat-container::-webkit-scrollbar {
    width: 7px;
  }

  #chat-container::-webkit-scrollbar-track {
    background: transparent;
    border-radius: 10px;
  }

  #chat-container::-webkit-scrollbar-thumb {
    background: #33333363;
    border-radius: 10px;
  }

  #chat-container::-webkit-scrollbar-thumb:hover {
    background: #555;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const input = document.getElementById('chat-input') as HTMLInputElement | null;
    const chatContainer = document.getElementById('chat-container') as HTMLDivElement | null;
  
    if (!input || !chatContainer) return;
  
    input.addEventListener('keydown', (e: KeyboardEvent) => {
      if (e.key === 'Enter' && input.value.trim() !== '') {
        const msg = input.value.trim();
  
        const msgBubble = document.createElement('div');
        msgBubble.className = 'self-end bg-[#8774e1] text-white px-4 py-2 rounded-2xl max-w-[70%] text-base break-words';
        msgBubble.textContent = msg;
  
        // Append para que se agregue al final (pero con column-reverse se ve abajo)
        chatContainer.appendChild(msgBubble);
  
        // Mantener el scroll "abajo" visual (que es el top del contenedor con column-reverse)
        chatContainer.scrollTop = 0;
  
        input.value = '';
      }
    });
  });
  </script>
  
